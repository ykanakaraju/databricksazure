
  Lab 8 - Working with Storage Account in Azure
  ---------------------------------------------------
  ** This is continuation of Lab 7 **
  ** Run the following commands using the Power shell **

  1. Create a new Resource Group
  
	az group create -l eastus -n cts_demo_rg	(-l for location, -n for name)
		
	az group list
	az group list --query "[*].name"
	az group list --query "[?name=='cts_demo_rg']"
		
	** Under a resource group you can create several resources **

  2. Create a Storage Account in the Resource Group
  
	az storage -h
	
	2.1 List all storage accounts in your azure account
		az storage account list
		az storage account list --query [*].name
	
	2.2 List all storage accounts in a resource group 'cts_demo_rg'
		az storage account list -g cts_demo_rg   (storage account in a specific resource group)
	
	2.3 Delete a storage account 'ctsdemoadls' from resource group 'cts_demo_rg'
		az storage account delete -n ctsdemoadls -g cts_demo_rg
	
	2.4 Create a storage account 'ctsdemoadls' in resource group 'cts_demo_rg'
		az storage account create -n ctsdemoadls -g cts_demo_rg -l eastus --sku Standard_LRS
	
	NOTES: 
		Storage account name must be between 3 and 24 characters in length and use numbers and lower-case letters only.
		SKU types refers to the type of storage account 
		(https://learn.microsoft.com/en-us/rest/api/storagerp/srp_sku_types)
		

  3. Add ADLS file system in the Storage Account  
		
	3.1 Get help about storage file systems 
		az storage -h
		az storage fs -h	
		az storage fs list -h
	
	3.2 List file systems in your storage account	
		az storage fs list --account-name ctsdemoadls
		(the abouve command will query for account key for your storage account)
		
		Or preferably you can use the following:
		az storage fs list --account-name ctsdemoadls --account-key <ACCOUNT-KEY>
		
		NOTE: Your account key can be found under "Security + networking" => "Access keys" menu 
		within your Storage account.
	
	3.3 Create a container called 'demodata' in your storage account
		az storage fs create -h
		az storage fs create -n demodata --account-name ctsdemoadls
		
	NOTE: A container (aka file-system) in Azure is equivalent to an S3 bucket in AWS

  4. Load files into the container (a.k.a ADLS file system)
  
	4.1 List directories in the ADLS file system		
		az storage fs directory -h
		az storage fs directory list -f demodata --account-name ctsdemoadls
		
	4.2 Upload a directory to the container (ADLS file system)			
		az storage fs directory upload -h			
		az storage fs directory upload -f demodata --account-name ctsdemoadls -s "E:\Databricks\datasets\retail_db" --recursive
		
	4.3 List directories and files in your account recursivly
		az storage fs directory list -f demodata --path retail_db --account-name ctsdemoadls
		az storage fs file list -f demodata --path retail_db --account-name ctsdemoadls
		az storage fs file list -f demodata --path retail_db/orders --account-name ctsdemoadls
		az storage fs file list -f demodata --path retail_db --account-name ctsdemoadls --query "[*].name"
		
		
  5. Cleanup the resources - Delete the storage account
  
	5.1 List all storage accounts in your resource group
		az storage account list -g cts_demo_rg --query "[*].name"
		
	5.2 Delete the storage account	
		az storage account delete -h 
		az storage account delete -n ctsdemoadls -g cts_demo_rg
		
		NOTE: When we delete a storage account, the file systems in it are automatically deleted as well.
	
  6. Cleanup the resources - Delete the resource group
  
	6.1 List the resource groups
		az group list --query "[*].name"
		
	6.2 Delete the resource group
		az group delete -n cts_demo_rg
	

	